{"version":3,"sources":["Data.js","StartingData.js","components/Header.js","components/InputField.js","components/SuggestedCountries.js","components/Footer.js","components/GridMaker.js","App.js","serviceWorker.js","index.js"],"names":["countries","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Botswana","Brazil","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Congo","Croatia","Cuba","Curaçao","Cyprus","Czechia","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Réunion","Romania","Rwanda","Samoa","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Sweden","Switzerland","Taiwan","Tajikistan","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Yemen","Zambia","Zimbabwe","startingCountries","name","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","latlng","demonym","area","gini","timezones","borders","nativeName","numericCode","currencies","code","symbol","languages","iso639_1","iso639_2","translations","de","es","fr","ja","it","br","pt","nl","hr","fa","flag","regionalBlocs","acronym","otherAcronyms","otherNames","cioc","Header","props","className","classes","id","title","children","InputField","type","autoComplete","placeholder","onChange","onBlur","onClick","value","input","SuggestedCountries","boldReplace","bind","userString","suggestion","replace","RegExp","split","map","element","key","match","onMouseEnter","this","onMouseLeave","suggestions","length","slice","item","add","React","Component","Footer","href","target","rel","GridMaker","format","setColumns","setPosition","headerRowGenerator","dataRowGenerator","toMillion","Math","round","toThousand","toLocaleString","gridSetup","object","width","reduce","previous","current","index","lastIndex","headerText","header","headerTextImage","sortButtons","sortAction","sortStatus","cellObject","countryObject","thisColumn","lastColumn","thisRow","lastRow","shadeStatus","position","src","alt","deleteAction","style","gridTemplateColumns","array","selectedCountries","row","rowArray","columnObject","column","columnArray","App","state","message","cached","headerHeight","fetchBlock","blurBlock","headerObj","cKeys","Object","keys","fetchCountry","getSuggestions","deleteCountry","sortCountries","adaptToHeader","rem","parseInt","getComputedStyle","document","documentElement","fontSize","getElementById","setState","offsetHeight","window","addEventListener","property","ascending","console","log","sortedCopy","JSON","parse","stringify","sort","a","b","some","country","filter","string","fetch","then","response","json","data","catch","error","event","test","cleanedInput","regex","matchedCountries","tier2searches","includes","concat","description","paddingTop","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7a8290f.chunk.js","sourcesContent":["const countries = {\r\n  Afghanistan: 'AF',\r\n  'Åland Islands': 'AX',\r\n  Albania: 'AL',\r\n  Algeria: 'DZ',\r\n  'American Samoa': 'AS',\r\n  Andorra: 'AD',\r\n  Angola: 'AO',\r\n  Anguilla: 'AI',\r\n  Antarctica: 'AQ',\r\n  'Antigua and Barbuda': 'AG',\r\n  Argentina: 'AR',\r\n  Armenia: 'AM',\r\n  Aruba: 'AW',\r\n  Australia: 'AU',\r\n  Austria: 'AT',\r\n  Azerbaijan: 'AZ',\r\n  Bahamas: 'BS',\r\n  Bahrain: 'BH',\r\n  Bangladesh: 'BD',\r\n  Barbados: 'BB',\r\n  Belarus: 'BY',\r\n  Belgium: 'BE',\r\n  Belize: 'BZ',\r\n  Benin: 'BJ',\r\n  Bermuda: 'BM',\r\n  Bhutan: 'BT',\r\n  'Bolivia (Plurinational State of)': 'BO',\r\n  'Bonaire, Sint Eustatius and Saba': 'BQ',\r\n  'Bosnia and Herzegovina': 'BA',\r\n  Botswana: 'BW',\r\n  'Bouvet Island': 'BV',\r\n  Brazil: 'BR',\r\n  'British Indian Ocean Territory': 'IO',\r\n  'Brunei Darussalam': 'BN',\r\n  Bulgaria: 'BG',\r\n  'Burkina Faso': 'BF',\r\n  Burundi: 'BI',\r\n  'Cabo Verde': 'CV',\r\n  Cambodia: 'KH',\r\n  Cameroon: 'CM',\r\n  Canada: 'CA',\r\n  'Cayman Islands': 'KY',\r\n  'Central African Republic': 'CF',\r\n  Chad: 'TD',\r\n  Chile: 'CL',\r\n  China: 'CN',\r\n  'Christmas Island': 'CX',\r\n  'Cocos (Keeling) Islands': 'CC',\r\n  Colombia: 'CO',\r\n  Comoros: 'KM',\r\n  Congo: 'CG',\r\n  'Congo, Democratic Republic of the': 'CD',\r\n  'Cook Islands': 'CK',\r\n  'Costa Rica': 'CR',\r\n  \"Côte d'Ivoire\": 'CI',\r\n  Croatia: 'HR',\r\n  Cuba: 'CU',\r\n  Curaçao: 'CW',\r\n  Cyprus: 'CY',\r\n  Czechia: 'CZ',\r\n  Denmark: 'DK',\r\n  Djibouti: 'DJ',\r\n  Dominica: 'DM',\r\n  'Dominican Republic': 'DO',\r\n  Ecuador: 'EC',\r\n  Egypt: 'EG',\r\n  'El Salvador': 'SV',\r\n  'Equatorial Guinea': 'GQ',\r\n  Eritrea: 'ER',\r\n  Estonia: 'EE',\r\n  Eswatini: 'SZ',\r\n  Ethiopia: 'ET',\r\n  'Falkland Islands (Malvinas)': 'FK',\r\n  'Faroe Islands': 'FO',\r\n  Fiji: 'FJ',\r\n  Finland: 'FI',\r\n  France: 'FR',\r\n  'French Guiana': 'GF',\r\n  'French Polynesia': 'PF',\r\n  'French Southern Territories': 'TF',\r\n  Gabon: 'GA',\r\n  Gambia: 'GM',\r\n  Georgia: 'GE',\r\n  Germany: 'DE',\r\n  Ghana: 'GH',\r\n  Gibraltar: 'GI',\r\n  Greece: 'GR',\r\n  Greenland: 'GL',\r\n  Grenada: 'GD',\r\n  Guadeloupe: 'GP',\r\n  Guam: 'GU',\r\n  Guatemala: 'GT',\r\n  Guernsey: 'GG',\r\n  Guinea: 'GN',\r\n  'Guinea-Bissau': 'GW',\r\n  Guyana: 'GY',\r\n  Haiti: 'HT',\r\n  'Heard Island and McDonald Islands': 'HM',\r\n  'Holy See': 'VA',\r\n  Honduras: 'HN',\r\n  'Hong Kong': 'HK',\r\n  Hungary: 'HU',\r\n  Iceland: 'IS',\r\n  India: 'IN',\r\n  Indonesia: 'ID',\r\n  'Iran (Islamic Republic of)': 'IR',\r\n  Iraq: 'IQ',\r\n  Ireland: 'IE',\r\n  'Isle of Man': 'IM',\r\n  Israel: 'IL',\r\n  Italy: 'IT',\r\n  Jamaica: 'JM',\r\n  Japan: 'JP',\r\n  Jersey: 'JE',\r\n  Jordan: 'JO',\r\n  Kazakhstan: 'KZ',\r\n  Kenya: 'KE',\r\n  Kiribati: 'KI',\r\n  \"Korea (Democratic People's Republic of)\": 'KP',\r\n  'Korea, Republic of': 'KR',\r\n  Kuwait: 'KW',\r\n  Kyrgyzstan: 'KG',\r\n  \"Lao People's Democratic Republic\": 'LA',\r\n  Latvia: 'LV',\r\n  Lebanon: 'LB',\r\n  Lesotho: 'LS',\r\n  Liberia: 'LR',\r\n  Libya: 'LY',\r\n  Liechtenstein: 'LI',\r\n  Lithuania: 'LT',\r\n  Luxembourg: 'LU',\r\n  Macao: 'MO',\r\n  Madagascar: 'MG',\r\n  Malawi: 'MW',\r\n  Malaysia: 'MY',\r\n  Maldives: 'MV',\r\n  Mali: 'ML',\r\n  Malta: 'MT',\r\n  'Marshall Islands': 'MH',\r\n  Martinique: 'MQ',\r\n  Mauritania: 'MR',\r\n  Mauritius: 'MU',\r\n  Mayotte: 'YT',\r\n  Mexico: 'MX',\r\n  'Micronesia (Federated States of)': 'FM',\r\n  'Moldova, Republic of': 'MD',\r\n  Monaco: 'MC',\r\n  Mongolia: 'MN',\r\n  Montenegro: 'ME',\r\n  Montserrat: 'MS',\r\n  Morocco: 'MA',\r\n  Mozambique: 'MZ',\r\n  Myanmar: 'MM',\r\n  Namibia: 'NA',\r\n  Nauru: 'NR',\r\n  Nepal: 'NP',\r\n  Netherlands: 'NL',\r\n  'New Caledonia': 'NC',\r\n  'New Zealand': 'NZ',\r\n  Nicaragua: 'NI',\r\n  Niger: 'NE',\r\n  Nigeria: 'NG',\r\n  Niue: 'NU',\r\n  'Norfolk Island': 'NF',\r\n  'North Macedonia': 'MK',\r\n  'Northern Mariana Islands': 'MP',\r\n  Norway: 'NO',\r\n  Oman: 'OM',\r\n  Pakistan: 'PK',\r\n  Palau: 'PW',\r\n  'Palestine, State of': 'PS',\r\n  Panama: 'PA',\r\n  'Papua New Guinea': 'PG',\r\n  Paraguay: 'PY',\r\n  Peru: 'PE',\r\n  Philippines: 'PH',\r\n  Pitcairn: 'PN',\r\n  Poland: 'PL',\r\n  Portugal: 'PT',\r\n  'Puerto Rico': 'PR',\r\n  Qatar: 'QA',\r\n  Réunion: 'RE',\r\n  Romania: 'RO',\r\n  'Russian Federation': 'RU',\r\n  Rwanda: 'RW',\r\n  'Saint Barthélemy': 'BL',\r\n  'Saint Helena, Ascension and Tristan da Cunha': 'SH',\r\n  'Saint Kitts and Nevis': 'KN',\r\n  'Saint Lucia': 'LC',\r\n  'Saint Martin (French part)': 'MF',\r\n  'Saint Pierre and Miquelon': 'PM',\r\n  'Saint Vincent and the Grenadines': 'VC',\r\n  Samoa: 'WS',\r\n  'San Marino': 'SM',\r\n  'Sao Tome and Principe': 'ST',\r\n  'Saudi Arabia': 'SA',\r\n  Senegal: 'SN',\r\n  Serbia: 'RS',\r\n  Seychelles: 'SC',\r\n  'Sierra Leone': 'SL',\r\n  Singapore: 'SG',\r\n  'Sint Maarten (Dutch part)': 'SX',\r\n  Slovakia: 'SK',\r\n  Slovenia: 'SI',\r\n  'Solomon Islands': 'SB',\r\n  Somalia: 'SO',\r\n  'South Africa': 'ZA',\r\n  'South Georgia and the South Sandwich Islands': 'GS',\r\n  'South Sudan': 'SS',\r\n  Spain: 'ES',\r\n  'Sri Lanka': 'LK',\r\n  Sudan: 'SD',\r\n  Suriname: 'SR',\r\n  'Svalbard and Jan Mayen': 'SJ',\r\n  Sweden: 'SE',\r\n  Switzerland: 'CH',\r\n  'Syrian Arab Republic': 'SY',\r\n  Taiwan: 'TW',\r\n  Tajikistan: 'TJ',\r\n  'Tanzania, United Republic of': 'TZ',\r\n  Thailand: 'TH',\r\n  'Timor-Leste': 'TL',\r\n  Togo: 'TG',\r\n  Tokelau: 'TK',\r\n  Tonga: 'TO',\r\n  'Trinidad and Tobago': 'TT',\r\n  Tunisia: 'TN',\r\n  Turkey: 'TR',\r\n  Turkmenistan: 'TM',\r\n  'Turks and Caicos Islands': 'TC',\r\n  Tuvalu: 'TV',\r\n  Uganda: 'UG',\r\n  Ukraine: 'UA',\r\n  'United Arab Emirates': 'AE',\r\n  'United Kingdom of Great Britain and Northern Ireland': 'GB',\r\n  'United States Minor Outlying Islands': 'UM',\r\n  'United States of America': 'US',\r\n  Uruguay: 'UY',\r\n  Uzbekistan: 'UZ',\r\n  Vanuatu: 'VU',\r\n  'Venezuela (Bolivarian Republic of)': 'VE',\r\n  'Viet Nam': 'VN',\r\n  'Virgin Islands (British)': 'VG',\r\n  'Virgin Islands (U.S.)': 'VI',\r\n  'Wallis and Futuna': 'WF',\r\n  'Western Sahara': 'EH',\r\n  Yemen: 'YE',\r\n  Zambia: 'ZM',\r\n  Zimbabwe: 'ZW',\r\n};\r\n\r\nexport { countries };\r\n","const startingCountries = [\r\n  {\r\n    name: 'Sweden',\r\n    topLevelDomain: ['.se'],\r\n    alpha2Code: 'SE',\r\n    alpha3Code: 'SWE',\r\n    callingCodes: ['46'],\r\n    capital: 'Stockholm',\r\n    altSpellings: ['SE', 'Kingdom of Sweden', 'Konungariket Sverige'],\r\n    region: 'Europe',\r\n    subregion: 'Northern Europe',\r\n    population: 9894888,\r\n    latlng: [62, 15],\r\n    demonym: 'Swedish',\r\n    area: 450295,\r\n    gini: 25,\r\n    timezones: ['UTC+01:00'],\r\n    borders: ['FIN', 'NOR'],\r\n    nativeName: 'Sverige',\r\n    numericCode: '752',\r\n    currencies: [{ code: 'SEK', name: 'Swedish krona', symbol: 'kr' }],\r\n    languages: [\r\n      {\r\n        iso639_1: 'sv',\r\n        iso639_2: 'swe',\r\n        name: 'Swedish',\r\n        nativeName: 'svenska',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Schweden',\r\n      es: 'Suecia',\r\n      fr: 'Suède',\r\n      ja: 'スウェーデン',\r\n      it: 'Svezia',\r\n      br: 'Suécia',\r\n      pt: 'Suécia',\r\n      nl: 'Zweden',\r\n      hr: 'Švedska',\r\n      fa: 'سوئد',\r\n    },\r\n    flag: 'https://restcountries.eu/data/swe.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'EU',\r\n        name: 'European Union',\r\n        otherAcronyms: [],\r\n        otherNames: [],\r\n      },\r\n    ],\r\n    cioc: 'SWE',\r\n  },\r\n  {\r\n    name: 'Zambia',\r\n    topLevelDomain: ['.zm'],\r\n    alpha2Code: 'ZM',\r\n    alpha3Code: 'ZMB',\r\n    callingCodes: ['260'],\r\n    capital: 'Lusaka',\r\n    altSpellings: ['ZM', 'Republic of Zambia'],\r\n    region: 'Africa',\r\n    subregion: 'Eastern Africa',\r\n    population: 15933883,\r\n    latlng: [-15, 30],\r\n    demonym: 'Zambian',\r\n    area: 752612,\r\n    gini: 54.6,\r\n    timezones: ['UTC+02:00'],\r\n    borders: ['AGO', 'BWA', 'COD', 'MWI', 'MOZ', 'NAM', 'TZA', 'ZWE'],\r\n    nativeName: 'Zambia',\r\n    numericCode: '894',\r\n    currencies: [{ code: 'ZMW', name: 'Zambian kwacha', symbol: 'ZK' }],\r\n    languages: [\r\n      {\r\n        iso639_1: 'en',\r\n        iso639_2: 'eng',\r\n        name: 'English',\r\n        nativeName: 'English',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Sambia',\r\n      es: 'Zambia',\r\n      fr: 'Zambie',\r\n      ja: 'ザンビア',\r\n      it: 'Zambia',\r\n      br: 'Zâmbia',\r\n      pt: 'Zâmbia',\r\n      nl: 'Zambia',\r\n      hr: 'Zambija',\r\n      fa: 'زامبیا',\r\n    },\r\n    flag: 'https://restcountries.eu/data/zmb.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'AU',\r\n        name: 'African Union',\r\n        otherAcronyms: [],\r\n        otherNames: [\r\n          'الاتحاد الأفريقي',\r\n          'Union africaine',\r\n          'União Africana',\r\n          'Unión Africana',\r\n          'Umoja wa Afrika',\r\n        ],\r\n      },\r\n    ],\r\n    cioc: 'ZAM',\r\n  },\r\n  {\r\n    name: 'India',\r\n    topLevelDomain: ['.in'],\r\n    alpha2Code: 'IN',\r\n    alpha3Code: 'IND',\r\n    callingCodes: ['91'],\r\n    capital: 'New Delhi',\r\n    altSpellings: ['IN', 'Bhārat', 'Republic of India', 'Bharat Ganrajya'],\r\n    region: 'Asia',\r\n    subregion: 'Southern Asia',\r\n    population: 1295210000,\r\n    latlng: [20, 77],\r\n    demonym: 'Indian',\r\n    area: 3287590,\r\n    gini: 33.4,\r\n    timezones: ['UTC+05:30'],\r\n    borders: ['AFG', 'BGD', 'BTN', 'MMR', 'CHN', 'NPL', 'PAK', 'LKA'],\r\n    nativeName: 'भारत',\r\n    numericCode: '356',\r\n    currencies: [{ code: 'INR', name: 'Indian rupee', symbol: '₹' }],\r\n    languages: [\r\n      { iso639_1: 'hi', iso639_2: 'hin', name: 'Hindi', nativeName: 'हिन्दी' },\r\n      {\r\n        iso639_1: 'en',\r\n        iso639_2: 'eng',\r\n        name: 'English',\r\n        nativeName: 'English',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Indien',\r\n      es: 'India',\r\n      fr: 'Inde',\r\n      ja: 'インド',\r\n      it: 'India',\r\n      br: 'Índia',\r\n      pt: 'Índia',\r\n      nl: 'India',\r\n      hr: 'Indija',\r\n      fa: 'هند',\r\n    },\r\n    flag: 'https://restcountries.eu/data/ind.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'SAARC',\r\n        name: 'South Asian Association for Regional Cooperation',\r\n        otherAcronyms: [],\r\n        otherNames: [],\r\n      },\r\n    ],\r\n    cioc: 'IND',\r\n  },\r\n];\r\n\r\nexport default startingCountries;\r\n","import React from 'react';\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={props.classes} id=\"site-header\">\r\n      <div className=\"m-left-small flex-row align-center\">\r\n        <i className=\"fas h1-icon fa-globe-africa m-right\"></i>\r\n        <h1 className=\"m-right\">{props.title}</h1>\r\n      </div>\r\n      {props.children}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nfunction InputField(props) {\r\n  return (\r\n    <input\r\n      id=\"search-field\"\r\n      type=\"text\"\r\n      autoComplete=\"off\"\r\n      className={props.classes}\r\n      placeholder=\"Type to add country\"\r\n      onChange={props.onChange}\r\n      onBlur={props.onBlur}\r\n      onClick={props.onChange}\r\n      value={props.input}\r\n    />\r\n  );\r\n}\r\n\r\nexport default InputField;\r\n","import React from 'react';\r\n\r\nclass SuggestedCountries extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boldReplace = this.boldReplace.bind(this);\r\n  }\r\n\r\n  boldReplace(userString, suggestion) {\r\n    const marked = suggestion.replace(\r\n      new RegExp(userString, 'i'),\r\n      '@' + userString + '@'\r\n    );\r\n    return marked.split('@').map((element) => {\r\n      if (element === userString) {\r\n        return (\r\n          <strong key={suggestion}>\r\n            {suggestion.match(new RegExp(userString, 'i'))}\r\n          </strong>\r\n        );\r\n      } else {\r\n        return element;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        id=\"suggestions-container\"\r\n        onMouseEnter={this.props.onMouseEnter}\r\n        onMouseLeave={this.props.onMouseLeave}\r\n        className={\r\n          this.props.suggestions.length === 0 ? 'hidden' : this.props.classes\r\n        }\r\n      >\r\n        {this.props.suggestions.slice(0, 4).map((item) => (\r\n          <div\r\n            className=\"suggestion-div flex-row justify-start align-center\"\r\n            key={item}\r\n            onClick={() => this.props.add(item)}\r\n          >\r\n            <i className=\"fas fa-chevron-right suggestion-icon\"></i>\r\n            <p>{this.boldReplace(this.props.input, item)}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SuggestedCountries;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className={props.classes}>\r\n      <p className=\"footer-text\">\r\n        by Oscar Lindqvist{' '}\r\n        <a\r\n          href=\"https://qvistdev09.github.io/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          [qvistdev09]\r\n        </a>\r\n      </p>\r\n      <i className=\"hide screen-medium-block fas fa-circle footer-icon m-left-small m-right-small\"></i>\r\n      <p className=\"footer-text\">\r\n        data fetched from{' '}\r\n        <a\r\n          href=\"https://restcountries.eu/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          REST Countries API\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nclass GridMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.format = this.format.bind(this);\r\n    this.setColumns = this.setColumns.bind(this);\r\n    this.setPosition = this.setPosition.bind(this);\r\n    this.headerRowGenerator = this.headerRowGenerator.bind(this);\r\n    this.dataRowGenerator = this.dataRowGenerator.bind(this);\r\n  }\r\n\r\n  format(input, type) {\r\n    if (!input) {\r\n      return 'n/a';\r\n    }\r\n\r\n    switch (type) {\r\n      case 'population':\r\n        if (input > 1000000) {\r\n          let toMillion = input / 1000000;\r\n          return Math.round(toMillion * 10) / 10 + ' mil';\r\n        } else if (input > 10000) {\r\n          let toThousand = input / 1000;\r\n          return Math.round(toThousand * 10) / 10 + ' k';\r\n        } else {\r\n          return input;\r\n        }\r\n      case 'area':\r\n        return [\r\n          input.toLocaleString() + ' km',\r\n          <span key=\"raised-span\" className=\"raised\">\r\n            2\r\n          </span>,\r\n        ];\r\n      default:\r\n        return input;\r\n    }\r\n  }\r\n\r\n  setColumns() {\r\n    return this.props.gridSetup\r\n      .map((object) => object.width)\r\n      .reduce((previous, current) => previous + ' ' + current);\r\n  }\r\n\r\n  setPosition(index, lastIndex) {\r\n    if (index === 0) {\r\n      return 'left-end';\r\n    } else if (index === lastIndex) {\r\n      return 'right-end';\r\n    } else {\r\n      return 'middle';\r\n    }\r\n  }\r\n\r\n  headerRowGenerator(object, index, lastIndex) {\r\n    const position = this.setPosition(index, lastIndex);\r\n    const className = 'grid-cell header-' + position;\r\n    const key = 'header-cell-' + object.value;\r\n\r\n    const headerText = (\r\n      <p className=\"m-right-small table-header\">{object.header}</p>\r\n    );\r\n    const headerTextImage = <p className=\"table-header\">{object.header}</p>;\r\n    const sortButtons = [\r\n      <i\r\n        onClick={() => this.props.sortAction(object.value, false)}\r\n        key=\"sort-ascending-false\"\r\n        className={\r\n          'fas fa-chevron-up sort-icon' +\r\n          (this.props.sortStatus === object.value + '-false'\r\n            ? ' active-sort'\r\n            : '')\r\n        }\r\n      ></i>,\r\n      <i\r\n        onClick={() => this.props.sortAction(object.value, true)}\r\n        key=\"sort-ascending-true\"\r\n        className={\r\n          'fas fa-chevron-down sort-icon' +\r\n          (this.props.sortStatus === object.value + '-true'\r\n            ? ' active-sort'\r\n            : '')\r\n        }\r\n      ></i>,\r\n    ];\r\n\r\n    switch (object.type) {\r\n      case 'text':\r\n      case 'number':\r\n        return (\r\n          <div key={key} className={className}>\r\n            {headerText}\r\n            {sortButtons}\r\n          </div>\r\n        );\r\n      case 'image':\r\n        return (\r\n          <div key={key} className={className}>\r\n            {headerTextImage}\r\n          </div>\r\n        );\r\n      case 'delete':\r\n        return <div key={key} className={className}></div>;\r\n      default:\r\n        return (\r\n          <div>\r\n            <p>Faulty cell</p>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  dataRowGenerator(\r\n    cellObject,\r\n    countryObject,\r\n    thisColumn,\r\n    lastColumn,\r\n    thisRow,\r\n    lastRow\r\n  ) {\r\n    let position = this.setPosition(thisColumn, lastColumn);\r\n    if (thisRow === lastRow) {\r\n      position = 'last-row-' + position;\r\n    }\r\n    let shadeStatus;\r\n    if (thisRow % 2 === 0) {\r\n      shadeStatus = 'shaded-cell';\r\n    } else {\r\n      shadeStatus = 'non-shaded-cell';\r\n    }\r\n    const key = cellObject.value + '-cell-' + countryObject.name;\r\n    const className = shadeStatus + ' ' + position + ' grid-cell';\r\n\r\n    switch (cellObject.type) {\r\n      case 'text':\r\n      case 'number':\r\n        return (\r\n          <div key={key} className={className}>\r\n            <p>\r\n              {this.format(countryObject[cellObject.value], cellObject.value)}\r\n            </p>\r\n          </div>\r\n        );\r\n      case 'image':\r\n        return (\r\n          <div key={key} className={className}>\r\n            <img\r\n              src={countryObject[cellObject.value]}\r\n              alt={'The flag of ' + countryObject.name}\r\n            />\r\n          </div>\r\n        );\r\n      case 'delete':\r\n        return (\r\n          <div key={key} className={className}>\r\n            <button\r\n              className=\"delete-button\"\r\n              onClick={() => this.props.deleteAction(countryObject.alpha2Code)}\r\n            >\r\n              <i className=\"fas fa-times delete-icon\"></i>\r\n            </button>\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <p>Incorrect cell</p>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"data-grid\" style={{ gridTemplateColumns: this.setColumns() }}>\r\n        {/* Create header */}\r\n        {this.props.gridSetup.map((object, index, array) =>\r\n          this.headerRowGenerator(object, index, array.length - 1)\r\n        )}\r\n\r\n        {/* Create data entries */}\r\n        {this.props.selectedCountries.map((countryObject, row, rowArray) =>\r\n          this.props.gridSetup.map((columnObject, column, columnArray) =>\r\n            this.dataRowGenerator(\r\n              columnObject,\r\n              countryObject,\r\n              column,\r\n              columnArray.length - 1,\r\n              row,\r\n              rowArray.length - 1\r\n            )\r\n          )\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridMaker;\r\n","import React from 'react';\r\nimport './css/utilities.css';\r\nimport './css/style.css';\r\nimport { countries } from './Data';\r\nimport startingCountries from './StartingData';\r\n\r\nimport Header from './components/Header';\r\nimport InputField from './components/InputField';\r\nimport SuggestedCountries from './components/SuggestedCountries';\r\nimport Footer from './components/Footer';\r\nimport GridMaker from './components/GridMaker';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: 'No message loaded',\r\n      input: '',\r\n      suggestions: [],\r\n      cached: startingCountries,\r\n      selectedCountries: startingCountries,\r\n      headerHeight: 10,\r\n      sortStatus: 'unsorted',\r\n      gridSetup: [\r\n        { type: 'text', value: 'name', header: 'Name', width: '1fr' },\r\n        { type: 'image', value: 'flag', header: 'Flag', width: '1fr' },\r\n        { type: 'text', value: 'capital', header: 'Capital', width: '1fr' },\r\n        {\r\n          type: 'text',\r\n          value: 'population',\r\n          header: 'Population',\r\n          width: '1fr',\r\n        },\r\n        { type: 'text', value: 'area', header: 'Area', width: '1fr' },\r\n        { type: 'text', value: 'demonym', header: 'Demonym', width: '1fr' },\r\n        { type: 'number', value: 'gini', header: 'Gini', width: '1fr' },\r\n        { type: 'delete', value: 'delete', header: 'Delete', width: '0.3fr' },\r\n      ],\r\n    };\r\n\r\n    this.fetchBlock = false;\r\n    this.blurBlock = false;\r\n    this.headerObj = null;\r\n    this.cKeys = Object.keys(countries);\r\n\r\n    this.fetchCountry = this.fetchCountry.bind(this);\r\n    this.getSuggestions = this.getSuggestions.bind(this);\r\n    this.deleteCountry = this.deleteCountry.bind(this);\r\n    this.sortCountries = this.sortCountries.bind(this);\r\n    this.adaptToHeader = this.adaptToHeader.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rem = parseInt(\r\n      getComputedStyle(document.documentElement).fontSize.slice(0, 2)\r\n    );\r\n    this.headerObj = document.getElementById('site-header');\r\n    this.setState(\r\n      {\r\n        headerHeight: this.headerObj.offsetHeight / rem,\r\n      },\r\n      () => window.addEventListener('resize', this.adaptToHeader)\r\n    );\r\n  }\r\n\r\n  adaptToHeader() {\r\n    const rem = parseInt(\r\n      getComputedStyle(document.documentElement).fontSize.slice(0, 2)\r\n    );\r\n    this.setState({\r\n      headerHeight: this.headerObj.offsetHeight / rem,\r\n    });\r\n  }\r\n\r\n  sortCountries(property, ascending) {\r\n    console.log('attempting to sort');\r\n    const sortedCopy = JSON.parse(JSON.stringify(this.state.selectedCountries));\r\n\r\n    if (ascending) {\r\n      sortedCopy.sort((a, b) => (a[property] < b[property] ? 1 : -1));\r\n    } else {\r\n      sortedCopy.sort((a, b) => (a[property] > b[property] ? 1 : -1));\r\n    }\r\n    this.setState({\r\n      selectedCountries: sortedCopy,\r\n      sortStatus: property + '-' + ascending,\r\n    });\r\n  }\r\n\r\n  deleteCountry(code) {\r\n    // check if country should be cached\r\n    if (!this.state.cached.some((country) => country.alpha2Code === code)) {\r\n      this.setState(\r\n        (state) => ({\r\n          cached: [\r\n            ...state.cached,\r\n            ...state.selectedCountries.filter(\r\n              (country) => country.alpha2Code === code\r\n            ),\r\n          ],\r\n          selectedCountries: state.selectedCountries.filter(\r\n            (country) => country.alpha2Code !== code\r\n          ),\r\n        }),\r\n        () => console.log(this.state.cached)\r\n      );\r\n    }\r\n    // if already cached, just delete\r\n    else {\r\n      this.setState(\r\n        (state, props) => ({\r\n          selectedCountries: state.selectedCountries.filter(\r\n            (country) => country.alpha2Code !== code\r\n          ),\r\n        }),\r\n        () => console.log(this.state.cached)\r\n      );\r\n    }\r\n  }\r\n\r\n  fetchCountry(string) {\r\n    if (this.fetchBlock) {\r\n      return;\r\n    }\r\n\r\n    const code = countries[string];\r\n    // check if country is already selected\r\n    if (\r\n      this.state.selectedCountries.some(\r\n        (country) => country.alpha2Code === code\r\n      )\r\n    ) {\r\n      console.log('Country already selected');\r\n      return;\r\n    }\r\n\r\n    this.fetchBlock = true;\r\n\r\n    // check if country can be retrieved from cache of already viewed countries\r\n    if (this.state.cached.some((country) => country.alpha2Code === code)) {\r\n      this.setState(\r\n        (state, props) => ({\r\n          selectedCountries: [\r\n            ...state.selectedCountries,\r\n            ...state.cached.filter((country) => country.alpha2Code === code),\r\n          ],\r\n          suggestions: [],\r\n          input: '',\r\n          sortStatus: 'unsorted',\r\n        }),\r\n        () => {\r\n          console.log('Country collected from cache, no API call needed');\r\n          this.fetchBlock = false;\r\n        }\r\n      );\r\n    }\r\n    // fetch previously unviewed country from API\r\n    else {\r\n      fetch('https://restcountries.eu/rest/v2/alpha/' + code)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState(\r\n            (state, props) => ({\r\n              selectedCountries: [\r\n                ...state.selectedCountries,\r\n                {\r\n                  ...data,\r\n                },\r\n              ],\r\n              suggestions: [],\r\n              input: '',\r\n              sortStatus: 'unsorted',\r\n            }),\r\n            () => {\r\n              console.log('An API call was made');\r\n              this.fetchBlock = false;\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => console.log('Could not get data'));\r\n    }\r\n  }\r\n\r\n  getSuggestions(event) {\r\n    if (/[A-Za-z]/g.test(event.target.value) === false) {\r\n      this.blurBlock = false;\r\n      this.setState({\r\n        input: '',\r\n        suggestions: [],\r\n      });\r\n      return;\r\n    }\r\n    const cleanedInput = event.target.value.replace(/[^A-Za-z|\\s]/g, '');\r\n    let regex = RegExp('^' + cleanedInput, 'i');\r\n    const matchedCountries = this.cKeys.filter((item) => regex.test(item));\r\n\r\n    if (matchedCountries.length >= 4) {\r\n      this.setState((state) => ({\r\n        input: cleanedInput,\r\n        suggestions: matchedCountries.filter(\r\n          (item) =>\r\n            !state.selectedCountries.some(\r\n              (element) => element.alpha2Code === countries[item]\r\n            )\r\n        ),\r\n      }));\r\n    } else {\r\n      regex = RegExp(cleanedInput, 'i');\r\n      const tier2searches = this.cKeys\r\n        .filter((item) => regex.test(item))\r\n        .filter((item) => !matchedCountries.includes(item));\r\n      this.setState((state) => ({\r\n        input: cleanedInput,\r\n        suggestions: matchedCountries\r\n          .concat(tier2searches)\r\n          .filter(\r\n            (item) =>\r\n              !state.selectedCountries.some(\r\n                (element) => element.alpha2Code === countries[item]\r\n              )\r\n          ),\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"site-container\">\r\n        <Header\r\n          classes=\"p flex-row justify-between align-center\"\r\n          title=\"COMPARE COUNTRIES\"\r\n          description=\"using REST countries API\"\r\n        >\r\n          <div id=\"input-area\" className=\"m-right\">\r\n            <InputField\r\n              onChange={this.getSuggestions}\r\n              onBlur={() => {\r\n                if (!this.blurBlock) {\r\n                  this.setState({ suggestions: [] });\r\n                }\r\n              }}\r\n              input={this.state.input}\r\n              classes={\r\n                this.state.suggestions.length > 0 ? 'showing-suggestions' : ''\r\n              }\r\n            />\r\n            <SuggestedCountries\r\n              classes=\"flex-column\"\r\n              suggestions={this.state.suggestions}\r\n              input={this.state.input}\r\n              add={this.fetchCountry}\r\n              onMouseEnter={() => {\r\n                this.blurBlock = true;\r\n              }}\r\n              onMouseLeave={() => {\r\n                this.blurBlock = false;\r\n              }}\r\n            />\r\n          </div>\r\n        </Header>\r\n        <div\r\n          id=\"content-container\"\r\n          className=\"flex-column\"\r\n          style={{ paddingTop: this.state.headerHeight + 'rem' }}\r\n        >\r\n          <div\r\n            id=\"grid-wrapper\"\r\n            className=\"p-left p-top p-right flex-column align-stretch grow\"\r\n          >\r\n            <GridMaker\r\n              sortAction={this.sortCountries}\r\n              deleteAction={this.deleteCountry}\r\n              sortStatus={this.state.sortStatus}\r\n              gridSetup={this.state.gridSetup}\r\n              selectedCountries={this.state.selectedCountries}\r\n            />\r\n            <div className=\"grow\"></div>\r\n            <Footer classes=\"flex-column screen-medium-flex-row justify-center align-center m-bottom-small m-top\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}