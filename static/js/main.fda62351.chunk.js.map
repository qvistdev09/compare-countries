{"version":3,"sources":["Data.js","StartingData.js","components/Footer.js","UtilityFunctions.js","components/MobileDataHeader.js","components/MobileCountry.js","components/GridMaker.js","components/SiteTitle.js","components/SearchField.js","components/Tooltip.js","components/CheckboxMaker.js","components/ViewSwitch.js","components/MobileGraphModeHeader.js","components/MobileGraphModeCountry.js","components/GraphMaker.js","App.js","serviceWorker.js","index.js"],"names":["countries","Afghanistan","Albania","Algeria","Andorra","Angola","Anguilla","Antarctica","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Botswana","Brazil","Bulgaria","Burundi","Cambodia","Cameroon","Canada","Chad","Chile","China","Colombia","Comoros","Congo","Croatia","Cuba","Curaçao","Cyprus","Czechia","Denmark","Djibouti","Dominica","Ecuador","Egypt","Eritrea","Estonia","Eswatini","Ethiopia","Fiji","Finland","France","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guyana","Haiti","Honduras","Hungary","Iceland","India","Indonesia","Iraq","Ireland","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kuwait","Kyrgyzstan","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","Nicaragua","Niger","Nigeria","Niue","Norway","Oman","Pakistan","Palau","Panama","Paraguay","Peru","Philippines","Pitcairn","Poland","Portugal","Qatar","Réunion","Romania","Rwanda","Samoa","Senegal","Serbia","Seychelles","Singapore","Slovakia","Slovenia","Somalia","Spain","Sudan","Suriname","Sweden","Switzerland","Taiwan","Tajikistan","Thailand","Togo","Tokelau","Tonga","Tunisia","Turkey","Turkmenistan","Tuvalu","Uganda","Ukraine","Uruguay","Uzbekistan","Vanuatu","Yemen","Zambia","Zimbabwe","startingCountries","name","topLevelDomain","alpha2Code","alpha3Code","callingCodes","capital","altSpellings","region","subregion","population","latlng","demonym","area","gini","timezones","borders","nativeName","numericCode","currencies","code","symbol","languages","iso639_1","iso639_2","translations","de","es","fr","ja","it","br","pt","nl","hr","fa","flag","regionalBlocs","acronym","otherAcronyms","otherNames","cioc","Footer","props","className","classes","href","target","rel","format","input","type","toMillion","Math","round","toThousand","toLocaleString","key","makeSortButtons","value","sortStatus","ascendingTrue","ascendingFalse","onClick","makeGraphBars","country","selectedCountries","gridSetup","barSpecs","filter","object","enabled","bars","i","graph","highest","map","parseFloat","reduce","prev","curr","width","push","style","backgroundColor","color","length","MobileDataHeader","toggleShowMobileSortOptions","split","sortAction","showMobileSortOptions","item","header","selectMobileSortOption","MobileCountry","src","alt","deleteAction","data","index","array","concat","GridMaker","setColumns","bind","setPosition","headerRowGenerator","dataRowGenerator","this","mobile","previous","current","lastIndex","headerText","headerTextImage","sortButtons","cellObject","countryObject","thisColumn","lastColumn","thisRow","lastRow","shadeStatus","position","id","gridTemplateColumns","row","rowArray","columnObject","column","columnArray","React","Component","SiteTitle","SearchField","boldReplace","userString","suggestion","replace","RegExp","element","match","autoComplete","suggestions","connectionFail","placeholder","placeholderMessage","onChange","onBlur","onMouseEnter","onMouseLeave","slice","add","Tooltip","tooltipText","CheckboxMaker","canToggle","canShow","listView","opacityFix","toggle","tooltip","ViewSwitch","toggleView","MobileGraphModeHeader","MobileGraphModeCountry","GraphMaker","makeGraphHeader","makeCountryRow","columns","display","graphHeader","rowStatus","App","state","fail","cached","headerHeight","fetchBlock","blurBlock","headerObj","cKeys","Object","keys","mobileBreakPoint","fetchCountry","getSuggestions","deleteCountry","sortCountries","resizeAction","toggleViewMode","setState","rem","parseInt","getComputedStyle","document","documentElement","fontSize","getElementById","offsetHeight","window","screen","innerWidth","addEventListener","copiedGridSetup","copy","property","ascending","arguments","console","log","sortedCopy","JSON","parse","stringify","sort","a","b","some","string","fetch","then","response","json","catch","error","event","test","cleanedInput","regex","matchedCountries","tier2searches","includes","paddingTop","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fda62351.chunk.js","sourcesContent":["const countries = {\r\n  Afghanistan: 'AF',\r\n  'Åland Islands': 'AX',\r\n  Albania: 'AL',\r\n  Algeria: 'DZ',\r\n  'American Samoa': 'AS',\r\n  Andorra: 'AD',\r\n  Angola: 'AO',\r\n  Anguilla: 'AI',\r\n  Antarctica: 'AQ',\r\n  'Antigua and Barbuda': 'AG',\r\n  Argentina: 'AR',\r\n  Armenia: 'AM',\r\n  Aruba: 'AW',\r\n  Australia: 'AU',\r\n  Austria: 'AT',\r\n  Azerbaijan: 'AZ',\r\n  Bahamas: 'BS',\r\n  Bahrain: 'BH',\r\n  Bangladesh: 'BD',\r\n  Barbados: 'BB',\r\n  Belarus: 'BY',\r\n  Belgium: 'BE',\r\n  Belize: 'BZ',\r\n  Benin: 'BJ',\r\n  Bermuda: 'BM',\r\n  Bhutan: 'BT',\r\n  'Bolivia (Plurinational State of)': 'BO',\r\n  'Bonaire, Sint Eustatius and Saba': 'BQ',\r\n  'Bosnia and Herzegovina': 'BA',\r\n  Botswana: 'BW',\r\n  'Bouvet Island': 'BV',\r\n  Brazil: 'BR',\r\n  'British Indian Ocean Territory': 'IO',\r\n  'Brunei Darussalam': 'BN',\r\n  Bulgaria: 'BG',\r\n  'Burkina Faso': 'BF',\r\n  Burundi: 'BI',\r\n  'Cabo Verde': 'CV',\r\n  Cambodia: 'KH',\r\n  Cameroon: 'CM',\r\n  Canada: 'CA',\r\n  'Cayman Islands': 'KY',\r\n  'Central African Republic': 'CF',\r\n  Chad: 'TD',\r\n  Chile: 'CL',\r\n  China: 'CN',\r\n  'Christmas Island': 'CX',\r\n  'Cocos (Keeling) Islands': 'CC',\r\n  Colombia: 'CO',\r\n  Comoros: 'KM',\r\n  Congo: 'CG',\r\n  'Congo, Democratic Republic of the': 'CD',\r\n  'Cook Islands': 'CK',\r\n  'Costa Rica': 'CR',\r\n  \"Côte d'Ivoire\": 'CI',\r\n  Croatia: 'HR',\r\n  Cuba: 'CU',\r\n  Curaçao: 'CW',\r\n  Cyprus: 'CY',\r\n  Czechia: 'CZ',\r\n  Denmark: 'DK',\r\n  Djibouti: 'DJ',\r\n  Dominica: 'DM',\r\n  'Dominican Republic': 'DO',\r\n  Ecuador: 'EC',\r\n  Egypt: 'EG',\r\n  'El Salvador': 'SV',\r\n  'Equatorial Guinea': 'GQ',\r\n  Eritrea: 'ER',\r\n  Estonia: 'EE',\r\n  Eswatini: 'SZ',\r\n  Ethiopia: 'ET',\r\n  'Falkland Islands (Malvinas)': 'FK',\r\n  'Faroe Islands': 'FO',\r\n  Fiji: 'FJ',\r\n  Finland: 'FI',\r\n  France: 'FR',\r\n  'French Guiana': 'GF',\r\n  'French Polynesia': 'PF',\r\n  'French Southern Territories': 'TF',\r\n  Gabon: 'GA',\r\n  Gambia: 'GM',\r\n  Georgia: 'GE',\r\n  Germany: 'DE',\r\n  Ghana: 'GH',\r\n  Gibraltar: 'GI',\r\n  Greece: 'GR',\r\n  Greenland: 'GL',\r\n  Grenada: 'GD',\r\n  Guadeloupe: 'GP',\r\n  Guam: 'GU',\r\n  Guatemala: 'GT',\r\n  Guernsey: 'GG',\r\n  Guinea: 'GN',\r\n  'Guinea-Bissau': 'GW',\r\n  Guyana: 'GY',\r\n  Haiti: 'HT',\r\n  'Heard Island and McDonald Islands': 'HM',\r\n  'Holy See': 'VA',\r\n  Honduras: 'HN',\r\n  'Hong Kong': 'HK',\r\n  Hungary: 'HU',\r\n  Iceland: 'IS',\r\n  India: 'IN',\r\n  Indonesia: 'ID',\r\n  'Iran (Islamic Republic of)': 'IR',\r\n  Iraq: 'IQ',\r\n  Ireland: 'IE',\r\n  'Isle of Man': 'IM',\r\n  Israel: 'IL',\r\n  Italy: 'IT',\r\n  Jamaica: 'JM',\r\n  Japan: 'JP',\r\n  Jersey: 'JE',\r\n  Jordan: 'JO',\r\n  Kazakhstan: 'KZ',\r\n  Kenya: 'KE',\r\n  Kiribati: 'KI',\r\n  \"Korea (Democratic People's Republic of)\": 'KP',\r\n  'Korea, Republic of': 'KR',\r\n  Kuwait: 'KW',\r\n  Kyrgyzstan: 'KG',\r\n  \"Lao People's Democratic Republic\": 'LA',\r\n  Latvia: 'LV',\r\n  Lebanon: 'LB',\r\n  Lesotho: 'LS',\r\n  Liberia: 'LR',\r\n  Libya: 'LY',\r\n  Liechtenstein: 'LI',\r\n  Lithuania: 'LT',\r\n  Luxembourg: 'LU',\r\n  Macao: 'MO',\r\n  Madagascar: 'MG',\r\n  Malawi: 'MW',\r\n  Malaysia: 'MY',\r\n  Maldives: 'MV',\r\n  Mali: 'ML',\r\n  Malta: 'MT',\r\n  'Marshall Islands': 'MH',\r\n  Martinique: 'MQ',\r\n  Mauritania: 'MR',\r\n  Mauritius: 'MU',\r\n  Mayotte: 'YT',\r\n  Mexico: 'MX',\r\n  'Micronesia (Federated States of)': 'FM',\r\n  'Moldova, Republic of': 'MD',\r\n  Monaco: 'MC',\r\n  Mongolia: 'MN',\r\n  Montenegro: 'ME',\r\n  Montserrat: 'MS',\r\n  Morocco: 'MA',\r\n  Mozambique: 'MZ',\r\n  Myanmar: 'MM',\r\n  Namibia: 'NA',\r\n  Nauru: 'NR',\r\n  Nepal: 'NP',\r\n  Netherlands: 'NL',\r\n  'New Caledonia': 'NC',\r\n  'New Zealand': 'NZ',\r\n  Nicaragua: 'NI',\r\n  Niger: 'NE',\r\n  Nigeria: 'NG',\r\n  Niue: 'NU',\r\n  'Norfolk Island': 'NF',\r\n  'North Macedonia': 'MK',\r\n  'Northern Mariana Islands': 'MP',\r\n  Norway: 'NO',\r\n  Oman: 'OM',\r\n  Pakistan: 'PK',\r\n  Palau: 'PW',\r\n  'Palestine, State of': 'PS',\r\n  Panama: 'PA',\r\n  'Papua New Guinea': 'PG',\r\n  Paraguay: 'PY',\r\n  Peru: 'PE',\r\n  Philippines: 'PH',\r\n  Pitcairn: 'PN',\r\n  Poland: 'PL',\r\n  Portugal: 'PT',\r\n  'Puerto Rico': 'PR',\r\n  Qatar: 'QA',\r\n  Réunion: 'RE',\r\n  Romania: 'RO',\r\n  'Russian Federation': 'RU',\r\n  Rwanda: 'RW',\r\n  'Saint Barthélemy': 'BL',\r\n  'Saint Helena, Ascension and Tristan da Cunha': 'SH',\r\n  'Saint Kitts and Nevis': 'KN',\r\n  'Saint Lucia': 'LC',\r\n  'Saint Martin (French part)': 'MF',\r\n  'Saint Pierre and Miquelon': 'PM',\r\n  'Saint Vincent and the Grenadines': 'VC',\r\n  Samoa: 'WS',\r\n  'San Marino': 'SM',\r\n  'Sao Tome and Principe': 'ST',\r\n  'Saudi Arabia': 'SA',\r\n  Senegal: 'SN',\r\n  Serbia: 'RS',\r\n  Seychelles: 'SC',\r\n  'Sierra Leone': 'SL',\r\n  Singapore: 'SG',\r\n  'Sint Maarten (Dutch part)': 'SX',\r\n  Slovakia: 'SK',\r\n  Slovenia: 'SI',\r\n  'Solomon Islands': 'SB',\r\n  Somalia: 'SO',\r\n  'South Africa': 'ZA',\r\n  'South Georgia and the South Sandwich Islands': 'GS',\r\n  'South Sudan': 'SS',\r\n  Spain: 'ES',\r\n  'Sri Lanka': 'LK',\r\n  Sudan: 'SD',\r\n  Suriname: 'SR',\r\n  'Svalbard and Jan Mayen': 'SJ',\r\n  Sweden: 'SE',\r\n  Switzerland: 'CH',\r\n  'Syrian Arab Republic': 'SY',\r\n  Taiwan: 'TW',\r\n  Tajikistan: 'TJ',\r\n  'Tanzania, United Republic of': 'TZ',\r\n  Thailand: 'TH',\r\n  'Timor-Leste': 'TL',\r\n  Togo: 'TG',\r\n  Tokelau: 'TK',\r\n  Tonga: 'TO',\r\n  'Trinidad and Tobago': 'TT',\r\n  Tunisia: 'TN',\r\n  Turkey: 'TR',\r\n  Turkmenistan: 'TM',\r\n  'Turks and Caicos Islands': 'TC',\r\n  Tuvalu: 'TV',\r\n  Uganda: 'UG',\r\n  Ukraine: 'UA',\r\n  'United Arab Emirates': 'AE',\r\n  'United Kingdom of Great Britain and Northern Ireland': 'GB',\r\n  'United States Minor Outlying Islands': 'UM',\r\n  'United States of America': 'US',\r\n  Uruguay: 'UY',\r\n  Uzbekistan: 'UZ',\r\n  Vanuatu: 'VU',\r\n  'Venezuela (Bolivarian Republic of)': 'VE',\r\n  'Viet Nam': 'VN',\r\n  'Virgin Islands (British)': 'VG',\r\n  'Virgin Islands (U.S.)': 'VI',\r\n  'Wallis and Futuna': 'WF',\r\n  'Western Sahara': 'EH',\r\n  Yemen: 'YE',\r\n  Zambia: 'ZM',\r\n  Zimbabwe: 'ZW',\r\n};\r\n\r\nexport { countries };\r\n","const startingCountries = [\r\n  {\r\n    name: 'Sweden',\r\n    topLevelDomain: ['.se'],\r\n    alpha2Code: 'SE',\r\n    alpha3Code: 'SWE',\r\n    callingCodes: ['46'],\r\n    capital: 'Stockholm',\r\n    altSpellings: ['SE', 'Kingdom of Sweden', 'Konungariket Sverige'],\r\n    region: 'Europe',\r\n    subregion: 'Northern Europe',\r\n    population: 9894888,\r\n    latlng: [62, 15],\r\n    demonym: 'Swedish',\r\n    area: 450295,\r\n    gini: 25,\r\n    timezones: ['UTC+01:00'],\r\n    borders: ['FIN', 'NOR'],\r\n    nativeName: 'Sverige',\r\n    numericCode: '752',\r\n    currencies: [{ code: 'SEK', name: 'Swedish krona', symbol: 'kr' }],\r\n    languages: [\r\n      {\r\n        iso639_1: 'sv',\r\n        iso639_2: 'swe',\r\n        name: 'Swedish',\r\n        nativeName: 'svenska',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Schweden',\r\n      es: 'Suecia',\r\n      fr: 'Suède',\r\n      ja: 'スウェーデン',\r\n      it: 'Svezia',\r\n      br: 'Suécia',\r\n      pt: 'Suécia',\r\n      nl: 'Zweden',\r\n      hr: 'Švedska',\r\n      fa: 'سوئد',\r\n    },\r\n    flag: 'https://restcountries.eu/data/swe.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'EU',\r\n        name: 'European Union',\r\n        otherAcronyms: [],\r\n        otherNames: [],\r\n      },\r\n    ],\r\n    cioc: 'SWE',\r\n  },\r\n  {\r\n    name: 'Zambia',\r\n    topLevelDomain: ['.zm'],\r\n    alpha2Code: 'ZM',\r\n    alpha3Code: 'ZMB',\r\n    callingCodes: ['260'],\r\n    capital: 'Lusaka',\r\n    altSpellings: ['ZM', 'Republic of Zambia'],\r\n    region: 'Africa',\r\n    subregion: 'Eastern Africa',\r\n    population: 15933883,\r\n    latlng: [-15, 30],\r\n    demonym: 'Zambian',\r\n    area: 752612,\r\n    gini: 54.6,\r\n    timezones: ['UTC+02:00'],\r\n    borders: ['AGO', 'BWA', 'COD', 'MWI', 'MOZ', 'NAM', 'TZA', 'ZWE'],\r\n    nativeName: 'Zambia',\r\n    numericCode: '894',\r\n    currencies: [{ code: 'ZMW', name: 'Zambian kwacha', symbol: 'ZK' }],\r\n    languages: [\r\n      {\r\n        iso639_1: 'en',\r\n        iso639_2: 'eng',\r\n        name: 'English',\r\n        nativeName: 'English',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Sambia',\r\n      es: 'Zambia',\r\n      fr: 'Zambie',\r\n      ja: 'ザンビア',\r\n      it: 'Zambia',\r\n      br: 'Zâmbia',\r\n      pt: 'Zâmbia',\r\n      nl: 'Zambia',\r\n      hr: 'Zambija',\r\n      fa: 'زامبیا',\r\n    },\r\n    flag: 'https://restcountries.eu/data/zmb.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'AU',\r\n        name: 'African Union',\r\n        otherAcronyms: [],\r\n        otherNames: [\r\n          'الاتحاد الأفريقي',\r\n          'Union africaine',\r\n          'União Africana',\r\n          'Unión Africana',\r\n          'Umoja wa Afrika',\r\n        ],\r\n      },\r\n    ],\r\n    cioc: 'ZAM',\r\n  },\r\n  {\r\n    name: 'India',\r\n    topLevelDomain: ['.in'],\r\n    alpha2Code: 'IN',\r\n    alpha3Code: 'IND',\r\n    callingCodes: ['91'],\r\n    capital: 'New Delhi',\r\n    altSpellings: ['IN', 'Bhārat', 'Republic of India', 'Bharat Ganrajya'],\r\n    region: 'Asia',\r\n    subregion: 'Southern Asia',\r\n    population: 1295210000,\r\n    latlng: [20, 77],\r\n    demonym: 'Indian',\r\n    area: 3287590,\r\n    gini: 33.4,\r\n    timezones: ['UTC+05:30'],\r\n    borders: ['AFG', 'BGD', 'BTN', 'MMR', 'CHN', 'NPL', 'PAK', 'LKA'],\r\n    nativeName: 'भारत',\r\n    numericCode: '356',\r\n    currencies: [{ code: 'INR', name: 'Indian rupee', symbol: '₹' }],\r\n    languages: [\r\n      { iso639_1: 'hi', iso639_2: 'hin', name: 'Hindi', nativeName: 'हिन्दी' },\r\n      {\r\n        iso639_1: 'en',\r\n        iso639_2: 'eng',\r\n        name: 'English',\r\n        nativeName: 'English',\r\n      },\r\n    ],\r\n    translations: {\r\n      de: 'Indien',\r\n      es: 'India',\r\n      fr: 'Inde',\r\n      ja: 'インド',\r\n      it: 'India',\r\n      br: 'Índia',\r\n      pt: 'Índia',\r\n      nl: 'India',\r\n      hr: 'Indija',\r\n      fa: 'هند',\r\n    },\r\n    flag: 'https://restcountries.eu/data/ind.svg',\r\n    regionalBlocs: [\r\n      {\r\n        acronym: 'SAARC',\r\n        name: 'South Asian Association for Regional Cooperation',\r\n        otherAcronyms: [],\r\n        otherNames: [],\r\n      },\r\n    ],\r\n    cioc: 'IND',\r\n  },\r\n];\r\n\r\nexport default startingCountries;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className={props.classes}>\r\n      <p className=\"footer-text\">\r\n        by Oscar Lindqvist{' '}\r\n        <a\r\n          href=\"https://qvistdev09.github.io/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          [qvistdev09]\r\n        </a>\r\n      </p>\r\n      <i className=\"hide screen-medium-block fas fa-circle footer-icon m-left-small m-right-small\"></i>\r\n      <p className=\"footer-text\">\r\n        data fetched from{' '}\r\n        <a\r\n          href=\"https://restcountries.eu/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          REST Countries API\r\n        </a>\r\n      </p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nexport function format(input, type) {\r\n  if (!input) {\r\n    return 'n/a';\r\n  }\r\n\r\n  switch (type) {\r\n    case 'population':\r\n      if (input > 1000000) {\r\n        let toMillion = input / 1000000;\r\n        return Math.round(toMillion * 10) / 10 + ' mil';\r\n      } else if (input > 10000) {\r\n        let toThousand = input / 1000;\r\n        return Math.round(toThousand * 10) / 10 + ' k';\r\n      } else {\r\n        return input;\r\n      }\r\n    case 'area':\r\n      return [\r\n        input.toLocaleString() + ' km',\r\n        <span key=\"raised-span\" className=\"raised\">\r\n          2\r\n        </span>,\r\n      ];\r\n    case 'gini':\r\n      return input + '%';\r\n    default:\r\n      return input;\r\n  }\r\n}\r\n\r\nexport function makeSortButtons(\r\n  value,\r\n  sortStatus,\r\n  ascendingTrue,\r\n  ascendingFalse\r\n) {\r\n  return [\r\n    <i\r\n      onClick={ascendingFalse}\r\n      key=\"sort-ascending-false\"\r\n      className={\r\n        'fas fa-chevron-up sort-icon' +\r\n        (sortStatus === value + '-false' ? ' active-sort' : '')\r\n      }\r\n    ></i>,\r\n    <i\r\n      onClick={ascendingTrue}\r\n      key=\"sort-ascending-true\"\r\n      className={\r\n        'fas fa-chevron-down sort-icon' +\r\n        (sortStatus === value + '-true' ? ' active-sort' : '')\r\n      }\r\n    ></i>,\r\n  ];\r\n}\r\n\r\nexport function makeGraphBars(country, selectedCountries, gridSetup) {\r\n  const barSpecs = gridSetup.filter(\r\n    (object) => object.type === 'number' && object.enabled === true\r\n  );\r\n  let bars = [];\r\n\r\n  for (let i = 0; i < barSpecs.length; i++) {\r\n    if (barSpecs[i].graph === 'relative') {\r\n      const highest = selectedCountries\r\n        .map((object) => parseFloat(object[barSpecs[i].value]))\r\n        .reduce((prev, curr) => (curr > prev ? curr : prev));\r\n      const width = Math.round(\r\n        (parseFloat(country[barSpecs[i].value]) / highest) * 100\r\n      );\r\n\r\n      bars.push(\r\n        <div\r\n          key={barSpecs[i].value + '-bar-' + country.name}\r\n          className=\"example-bar\"\r\n          style={{ width: width + '%', backgroundColor: barSpecs[i].color }}\r\n        >\r\n          <p className=\"bar-chart-label\">\r\n            {format(country[barSpecs[i].value], barSpecs[i].value)}\r\n          </p>\r\n        </div>\r\n      );\r\n    } else {\r\n      const width = Math.round(parseFloat(country[barSpecs[i].value]));\r\n      bars.push(\r\n        <div\r\n          key={barSpecs[i].value + '-bar-' + country.name}\r\n          className=\"example-bar\"\r\n          style={{ width: width + '%', backgroundColor: barSpecs[i].color }}\r\n        >\r\n          <p className=\"bar-chart-label\">\r\n            {format(country[barSpecs[i].value], barSpecs[i].value)}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return bars;\r\n}\r\n","import React from 'react';\r\nimport './css/MobileDataHeader.css';\r\nimport { makeSortButtons } from '../UtilityFunctions';\r\n\r\nfunction MobileDataHeader(props) {\r\n  return [\r\n    <div\r\n      key=\"mobile-header-left\"\r\n      className=\"MobileDataHeader-cell MobileDataHeader-left\"\r\n    >\r\n      <p className=\"MobileDataHeader-label\">Sort mode:</p>\r\n    </div>,\r\n    <div\r\n      key=\"mobile-header-right\"\r\n      className=\"MobileDataHeader-cell MobileDataHeader-right\"\r\n    >\r\n      <div className=\"MobileDataHeader-sort-container flex-row align-center justify-between\">\r\n        <p\r\n          className=\"MobileDataHeader-sort-mode grow\"\r\n          onClick={props.toggleShowMobileSortOptions}\r\n        >\r\n          {props.sortStatus.split('-')[0]}\r\n        </p>\r\n        <div className=\"flex-row align-center\">\r\n          {makeSortButtons(\r\n            props.sortStatus.split('-')[0],\r\n            props.sortStatus,\r\n            () => props.sortAction(props.sortStatus.split('-')[0], true),\r\n            () => props.sortAction(props.sortStatus.split('-')[0], false)\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            'MobileDataHeader-sort-choices-container' +\r\n            (props.showMobileSortOptions ? '' : ' hide')\r\n          }\r\n        >\r\n          {props.gridSetup\r\n            .filter((item) => item.type !== 'image' && item.type !== 'delete')\r\n            .map((object) => (\r\n              <p\r\n                key={'sort-option-' + object.header}\r\n                className=\"MobileDataHeader-sort-mode-choice\"\r\n                onClick={() => props.selectMobileSortOption(object.value)}\r\n              >\r\n                {object.header}\r\n              </p>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>,\r\n  ];\r\n}\r\n\r\nexport default MobileDataHeader;\r\n","import React from 'react';\r\nimport './css/MobileCountry.css';\r\nimport { format } from '../UtilityFunctions';\r\n\r\nfunction MobileCountry(props) {\r\n  const header = [\r\n    <div\r\n      key={'mobile-country-header-flag-' + props.country.name}\r\n      className=\"MobileCountry-cell MobileCountry-header-left\"\r\n    >\r\n      <img\r\n        src={props.country.flag}\r\n        alt={'The flag of ' + props.country.name}\r\n        className=\"MobileCountry-flag\"\r\n      />\r\n    </div>,\r\n    <div\r\n      key={'mobile-country-header-name-' + props.country.name}\r\n      className=\"MobileCountry-cell MobileCountry-header-right\"\r\n    >\r\n      <p>{props.country.name}</p>\r\n      <button\r\n        className=\"delete-button\"\r\n        onClick={() => props.deleteAction(props.country.alpha2Code)}\r\n      >\r\n        <i className=\"fas fa-times delete-icon\"></i>\r\n      </button>\r\n    </div>,\r\n  ];\r\n\r\n  const data = props.gridSetup\r\n    .filter(\r\n      (item) =>\r\n        item.type !== 'delete' && item.value !== 'name' && item.value !== 'flag'\r\n    )\r\n    .map((object, index, array) => [\r\n      <div\r\n        key={\r\n          'mobile-header-' + object.value + '-' + props.country[object.value]\r\n        }\r\n        className={\r\n          'MobileCountry-cell MobileCountry-left' +\r\n          (index === array.length - 1 ? '-last' : '')\r\n        }\r\n      >\r\n        <p className=\"MobileCountry-header\">{object.header}</p>\r\n      </div>,\r\n      <div\r\n        key={'mobile-data-' + object.value + '-' + props.country[object.value]}\r\n        className={\r\n          'MobileCountry-cell MobileCountry-right' +\r\n          (index === array.length - 1 ? '-last' : '')\r\n        }\r\n      >\r\n        <p>{format(props.country[object.value], object.value)}</p>\r\n      </div>,\r\n    ]);\r\n\r\n  return header.concat(data);\r\n}\r\n\r\nexport default MobileCountry;\r\n","import React from 'react';\r\nimport MobileDataHeader from './MobileDataHeader';\r\nimport MobileCountry from './MobileCountry';\r\nimport { format } from '../UtilityFunctions';\r\nimport { makeSortButtons } from '../UtilityFunctions';\r\n\r\nclass GridMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setColumns = this.setColumns.bind(this);\r\n    this.setPosition = this.setPosition.bind(this);\r\n    this.headerRowGenerator = this.headerRowGenerator.bind(this);\r\n    this.dataRowGenerator = this.dataRowGenerator.bind(this);\r\n  }\r\n\r\n  setColumns() {\r\n    if (!this.props.mobile) {\r\n      return this.props.gridSetup\r\n        .filter((item) => item.enabled)\r\n        .map((object) => object.width)\r\n        .reduce((previous, current) => previous + ' ' + current);\r\n    } else {\r\n      return 'auto 1fr';\r\n    }\r\n  }\r\n\r\n  setPosition(index, lastIndex) {\r\n    if (index === 0) {\r\n      return 'left-end';\r\n    } else if (index === lastIndex) {\r\n      return 'right-end';\r\n    } else {\r\n      return 'middle';\r\n    }\r\n  }\r\n\r\n  headerRowGenerator(object, index, lastIndex) {\r\n    const position = this.setPosition(index, lastIndex);\r\n    const className = 'grid-cell header-' + position;\r\n    const key = 'header-cell-' + object.value;\r\n\r\n    const headerText = (\r\n      <p className=\"m-right-small table-header\">{object.header}</p>\r\n    );\r\n    const headerTextImage = <p className=\"table-header\">{object.header}</p>;\r\n\r\n    const sortButtons = makeSortButtons(\r\n      object.value,\r\n      this.props.sortStatus,\r\n      () => this.props.sortAction(object.value, true),\r\n      () => this.props.sortAction(object.value, false)\r\n    );\r\n\r\n    switch (object.type) {\r\n      case 'text':\r\n      case 'number':\r\n        return (\r\n          <div key={key} className={className}>\r\n            {headerText}\r\n            {sortButtons}\r\n          </div>\r\n        );\r\n      case 'image':\r\n        return (\r\n          <div key={key} className={className}>\r\n            {headerTextImage}\r\n          </div>\r\n        );\r\n      case 'delete':\r\n        return (\r\n          <div\r\n            key={key}\r\n            className={\r\n              this.props.gridSetup.filter((item) =>\r\n                item.type !== 'delete' && item.enabled === true ? true : false\r\n              ).length === 0\r\n                ? 'hide '\r\n                : className\r\n            }\r\n          ></div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <p>Faulty cell</p>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  dataRowGenerator(\r\n    cellObject,\r\n    countryObject,\r\n    thisColumn,\r\n    lastColumn,\r\n    thisRow,\r\n    lastRow\r\n  ) {\r\n    let position = this.setPosition(thisColumn, lastColumn);\r\n    if (thisRow === lastRow) {\r\n      position = 'last-row-' + position;\r\n    }\r\n    let shadeStatus;\r\n    if (thisRow % 2 === 0) {\r\n      shadeStatus = 'shaded-cell';\r\n    } else {\r\n      shadeStatus = 'non-shaded-cell';\r\n    }\r\n    const key = cellObject.value + '-cell-' + countryObject.name;\r\n    const className = shadeStatus + ' ' + position + ' grid-cell';\r\n\r\n    switch (cellObject.type) {\r\n      case 'text':\r\n      case 'number':\r\n        return (\r\n          <div key={key} className={className}>\r\n            <p>{format(countryObject[cellObject.value], cellObject.value)}</p>\r\n          </div>\r\n        );\r\n      case 'image':\r\n        return (\r\n          <div key={key} className={className}>\r\n            <img\r\n              src={countryObject[cellObject.value]}\r\n              alt={'The flag of ' + countryObject.name}\r\n            />\r\n          </div>\r\n        );\r\n      case 'delete':\r\n        return (\r\n          <div\r\n            key={key}\r\n            className={\r\n              this.props.gridSetup.filter((item) =>\r\n                item.type !== 'delete' && item.enabled === true ? true : false\r\n              ).length === 0\r\n                ? 'hide '\r\n                : className\r\n            }\r\n          >\r\n            <button\r\n              className=\"delete-button\"\r\n              onClick={() => this.props.deleteAction(countryObject.alpha2Code)}\r\n            >\r\n              <i className=\"fas fa-times delete-icon\"></i>\r\n            </button>\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <p>Incorrect cell</p>\r\n          </div>\r\n        );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"data-grid\" style={{ gridTemplateColumns: this.setColumns() }}>\r\n        {/* Create header */}\r\n        {this.props.mobile ? (\r\n          <MobileDataHeader\r\n            sortStatus={this.props.sortStatus}\r\n            sortAction={this.props.sortAction}\r\n            showMobileSortOptions={this.props.showMobileSortOptions}\r\n            gridSetup={this.props.gridSetup}\r\n            toggleShowMobileSortOptions={this.props.toggleShowMobileSortOptions}\r\n            selectMobileSortOption={this.props.selectMobileSortOption}\r\n          />\r\n        ) : (\r\n          this.props.gridSetup\r\n            .filter((item) => item.enabled === true)\r\n            .map((object, index, array) =>\r\n              this.headerRowGenerator(object, index, array.length - 1)\r\n            )\r\n        )}\r\n\r\n        {/* Create data entries */}\r\n        {this.props.mobile\r\n          ? this.props.selectedCountries.map((country) => (\r\n              <MobileCountry\r\n                key={'mobile-country-' + country.name}\r\n                country={country}\r\n                gridSetup={this.props.gridSetup}\r\n                deleteAction={this.props.deleteAction}\r\n              />\r\n            ))\r\n          : this.props.selectedCountries.map((countryObject, row, rowArray) =>\r\n              this.props.gridSetup\r\n                .filter((item) => item.enabled === true)\r\n                .map((columnObject, column, columnArray) =>\r\n                  this.dataRowGenerator(\r\n                    columnObject,\r\n                    countryObject,\r\n                    column,\r\n                    columnArray.length - 1,\r\n                    row,\r\n                    rowArray.length - 1\r\n                  )\r\n                )\r\n            )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridMaker;\r\n","import React from 'react';\r\n\r\nfunction SiteTitle(props) {\r\n  return (\r\n    <div className={props.classes}>\r\n      <i className=\"fas h1-icon fa-globe-africa screen-small-m-right\"></i>\r\n      <h1 className=\"screen-small-m-right\">COMPARE COUNTRIES</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SiteTitle;\r\n","import React from 'react';\r\n\r\nclass SearchField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.boldReplace = this.boldReplace.bind(this);\r\n  }\r\n\r\n  boldReplace(userString, suggestion) {\r\n    const marked = suggestion.replace(\r\n      new RegExp(userString, 'i'),\r\n      '@' + userString + '@'\r\n    );\r\n    return marked.split('@').map((element) => {\r\n      if (element === userString) {\r\n        return (\r\n          <strong key={suggestion}>\r\n            {suggestion.match(new RegExp(userString, 'i'))}\r\n          </strong>\r\n        );\r\n      } else {\r\n        return element;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"input-area\" className={this.props.classes}>\r\n        <input\r\n          id=\"search-field\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          className={\r\n            'country-search-field' +\r\n            (this.props.suggestions.length > 0 ? ' showing-suggestions' : '') +\r\n            (this.props.connectionFail ? ' connection-fail' : '')\r\n          }\r\n          placeholder={this.props.placeholderMessage(this.props.connectionFail)}\r\n          onChange={this.props.onChange}\r\n          onBlur={this.props.onBlur}\r\n          onClick={this.props.onChange}\r\n          value={this.props.input}\r\n        />\r\n        <div\r\n          id=\"suggestions-container\"\r\n          onMouseEnter={this.props.onMouseEnter}\r\n          onMouseLeave={this.props.onMouseLeave}\r\n          className={\r\n            this.props.suggestions.length === 0 ? 'hidden' : 'flex-column'\r\n          }\r\n        >\r\n          {this.props.suggestions.slice(0, 4).map((item) => (\r\n            <div\r\n              className=\"suggestion-div flex-row justify-start align-center\"\r\n              key={item}\r\n              onClick={() => this.props.add(item)}\r\n            >\r\n              <i className=\"fas fa-chevron-right suggestion-icon\"></i>\r\n              <p>{this.boldReplace(this.props.input, item)}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchField;\r\n","import React from 'react';\r\n\r\nfunction Tooltip(props) {\r\n  return (\r\n    <div className=\"tooltip\">\r\n      <i className=\"fas fa-info-circle tooltip-icon\"></i>\r\n      <div className=\"tooltip-hover\">\r\n        <div className=\"tooltip-pointer\"></div>\r\n        <p className=\"tooltip-text\">{props.tooltipText}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tooltip;\r\n","import React from 'react';\r\nimport Tooltip from './Tooltip';\r\n\r\nclass CheckboxMaker extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.classes}>\r\n        {this.props.gridSetup\r\n          .filter((item) => item.canToggle !== false)\r\n          .map((item) => {\r\n            const canShow = item.graph\r\n              ? true\r\n              : this.props.listView\r\n              ? true\r\n              : false;\r\n            const opacityFix = canShow ? '' : ' low-opacity';\r\n\r\n            return (\r\n              <div\r\n                key={'checkbox-' + item.value}\r\n                className={'flex-row align-center m-right' + opacityFix}\r\n              >\r\n                <i\r\n                  className={\r\n                    (item.enabled ? 'far fa-check-square' : 'far fa-square') +\r\n                    ' checkbox-icon'\r\n                  }\r\n                  {...(canShow && {\r\n                    onClick: () => this.props.toggle(item.value),\r\n                  })}\r\n                ></i>\r\n                <p className=\"checkbox-label m-left-small\">{item.header}</p>\r\n                {item.tooltip && <Tooltip tooltipText={item.tooltip} />}\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckboxMaker;\r\n","import React from 'react';\r\n\r\nfunction ViewSwitch(props) {\r\n  return (\r\n    <div\r\n      className={\r\n        props.classes + ' view-switch flex-row justify-between align-stretch'\r\n      }\r\n      onClick={props.toggleView}\r\n    >\r\n      <div className=\"switch-icon-wrapper switch-icon-wrapper-active\">\r\n        <i\r\n          className={\r\n            'far fa-list-alt switch-icon' +\r\n            (props.listView === true ? ' switch-icon-active' : '')\r\n          }\r\n        ></i>\r\n      </div>\r\n      <div className=\"switch-icon-wrapper\">\r\n        <i\r\n          className={\r\n            'fas fa-chart-bar switch-icon' +\r\n            (props.listView === false ? ' switch-icon-active' : '')\r\n          }\r\n        ></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewSwitch;\r\n","import React from 'react';\r\nimport './css/MobileGraphModeHeader.css';\r\nimport { makeSortButtons } from '../UtilityFunctions';\r\n\r\nfunction MobileGraphModeHeader(props) {\r\n  return (\r\n    <div className=\"MobileGraphModeHeader-header\">\r\n      {props.gridSetup\r\n        .filter((item) => item.graph)\r\n        .map((object, index, array) => (\r\n          <div\r\n            key={'graph-header-' + object.value}\r\n            className={\r\n              'MobileGraphModeHeader-grid-row align-center' +\r\n              (index === array.length - 1 ? '' : ' m-bottom-small')\r\n            }\r\n          >\r\n            <div\r\n              className=\"MobileGraphModeHeader-square m-right-small\"\r\n              style={{ backgroundColor: object.color }}\r\n              onClick={() => props.toggle(object.value)}\r\n            >\r\n              {object.enabled && <i className=\"fas fa-check\"></i>}\r\n            </div>\r\n            <p className=\"MobileGraphModeHeader-sort-label\">{object.header}</p>\r\n            <div className=\"flex-row align-center\">\r\n              {makeSortButtons(\r\n                object.value,\r\n                props.sortStatus,\r\n                () => props.sortAction(object.value, true),\r\n                () => props.sortAction(object.value, false)\r\n              )}\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MobileGraphModeHeader;\r\n","import React from 'react';\r\nimport './css/MobileGraphModeCountry.css';\r\nimport { makeGraphBars } from '../UtilityFunctions';\r\n\r\nfunction MobileGraphModeCountry(props) {\r\n  return [\r\n    <div\r\n      key={'mobile-graph-flag-cell-' + props.country.name}\r\n      className=\"MobileGraphModeCountry-cell MobileGraphModeCountry-upper-left\"\r\n    >\r\n      <img\r\n        src={props.country.flag}\r\n        alt={'The flag of ' + props.country.name}\r\n        className=\"MobileCountry-flag\"\r\n      />\r\n    </div>,\r\n    <div\r\n      key={'mobile-graph-name-cell-' + props.country.name}\r\n      className=\"MobileGraphModeCountry-name-cell MobileGraphModeCountry-upper-right\"\r\n    >\r\n      <p>{props.country.name}</p>\r\n      <button\r\n        className=\"delete-button\"\r\n        onClick={() => props.deleteAction(props.country.alpha2Code)}\r\n      >\r\n        <i className=\"fas fa-times delete-icon\"></i>\r\n      </button>\r\n    </div>,\r\n    <div\r\n      key={'mobile-graph-bar-cell-' + props.country.name}\r\n      className=\"MobileGraphModeCountry-bar-container\"\r\n    >\r\n      {makeGraphBars(props.country, props.selectedCountries, props.gridSetup)}\r\n    </div>,\r\n  ];\r\n}\r\n\r\nexport default MobileGraphModeCountry;\r\n","import React from 'react';\r\nimport { format } from '../UtilityFunctions';\r\nimport { makeSortButtons } from '../UtilityFunctions';\r\nimport MobileGraphModeHeader from './MobileGraphModeHeader';\r\nimport MobileGraphModeCountry from './MobileGraphModeCountry';\r\n\r\nclass GraphMaker extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.makeGraphHeader = this.makeGraphHeader.bind(this);\r\n    this.makeCountryRow = this.makeCountryRow.bind(this);\r\n    this.makeGraphBars = this.makeGraphBars.bind(this);\r\n    this.setColumns = this.setColumns.bind(this);\r\n  }\r\n\r\n  setColumns() {\r\n    let columns = this.props.gridSetup\r\n      .filter((object) => object.type === 'number' && object.enabled === true)\r\n      .map(() => '1fr');\r\n    return columns.length < 1\r\n      ? '1fr'\r\n      : columns.reduce((previous, current) => previous + ' ' + current);\r\n  }\r\n\r\n  makeGraphBars(country, selectedCountries, gridSetup) {\r\n    const barSpecs = gridSetup.filter(\r\n      (object) => object.type === 'number' && object.enabled === true\r\n    );\r\n    let bars = [];\r\n\r\n    for (let i = 0; i < barSpecs.length; i++) {\r\n      if (barSpecs[i].graph === 'relative') {\r\n        const highest = selectedCountries\r\n          .map((object) => parseFloat(object[barSpecs[i].value]))\r\n          .reduce((prev, curr) => (curr > prev ? curr : prev));\r\n        const width = Math.round(\r\n          (parseFloat(country[barSpecs[i].value]) / highest) * 100\r\n        );\r\n\r\n        bars.push(\r\n          <div\r\n            key={barSpecs[i].value + '-bar-' + country.name}\r\n            className=\"example-bar\"\r\n            style={{ width: width + '%', backgroundColor: barSpecs[i].color }}\r\n          >\r\n            <p className=\"bar-chart-label\">\r\n              {format(country[barSpecs[i].value], barSpecs[i].value)}\r\n            </p>\r\n          </div>\r\n        );\r\n      } else {\r\n        const width = Math.round(parseFloat(country[barSpecs[i].value]));\r\n        bars.push(\r\n          <div\r\n            key={barSpecs[i].value + '-bar-' + country.name}\r\n            className=\"example-bar\"\r\n            style={{ width: width + '%', backgroundColor: barSpecs[i].color }}\r\n          >\r\n            <p className=\"bar-chart-label\">\r\n              {format(country[barSpecs[i].value], barSpecs[i].value)}\r\n            </p>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return bars;\r\n  }\r\n\r\n  makeGraphHeader() {\r\n    return [\r\n      <div key=\"graph-header-cell-name\" className=\"grid-cell header-left-end\">\r\n        <p className=\"table-header m-right-small\">Name</p>\r\n        <i\r\n          onClick={() => this.props.sortAction('name', false)}\r\n          key=\"sort-ascending-false\"\r\n          className={\r\n            'fas fa-chevron-up sort-icon' +\r\n            (this.props.sortStatus === 'name-false' ? ' active-sort' : '')\r\n          }\r\n        ></i>\r\n        <i\r\n          onClick={() => this.props.sortAction('name', true)}\r\n          key=\"sort-ascending-true\"\r\n          className={\r\n            'fas fa-chevron-down sort-icon' +\r\n            (this.props.sortStatus === 'name-true' ? ' active-sort' : '')\r\n          }\r\n        ></i>\r\n      </div>,\r\n      <div\r\n        key=\"graph-header-cell-gap\"\r\n        className=\"header-middle\"\r\n        style={{ display: 'grid', gridTemplateColumns: this.setColumns() }}\r\n      >\r\n        {this.props.gridSetup\r\n          .filter(\r\n            (object) => object.type === 'number' && object.enabled === true\r\n          )\r\n          .map((graphHeader) => (\r\n            <div\r\n              key={'graph-header-cell-' + graphHeader.header}\r\n              className=\"grid-cell\"\r\n            >\r\n              <div\r\n                className=\"table-header-graph m-right-small\"\r\n                style={{ backgroundColor: graphHeader.color }}\r\n              />\r\n              <p className=\"table-header\">{graphHeader.header}</p>\r\n              {makeSortButtons(\r\n                graphHeader.value,\r\n                this.props.sortStatus,\r\n                () => this.props.sortAction(graphHeader.value, true),\r\n                () => this.props.sortAction(graphHeader.value, false)\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>,\r\n      <div\r\n        key=\"graph-header-cell-delete\"\r\n        className=\"grid-cell header-right-end\"\r\n      ></div>,\r\n    ];\r\n  }\r\n\r\n  makeCountryRow(object, index, array) {\r\n    const shadeStatus = index % 2 === 0 ? ' shaded-cell' : '';\r\n    const rowStatus = index === array.length - 1 ? 'last-row-' : '';\r\n\r\n    return [\r\n      <div\r\n        key={'name-cell-' + object.name}\r\n        className={rowStatus + 'left-end grid-cell' + shadeStatus}\r\n      >\r\n        <p>{object.name}</p>\r\n      </div>,\r\n      <div\r\n        key={'chart-cell-' + object.name}\r\n        className={rowStatus + 'middle bar-chart-cell' + shadeStatus}\r\n      >\r\n        {this.makeGraphBars(object, array, this.props.gridSetup)}\r\n      </div>,\r\n      <div\r\n        key={'delete-cell-' + object.name}\r\n        className={rowStatus + 'right-end grid-cell' + shadeStatus}\r\n      >\r\n        <button\r\n          className=\"delete-button\"\r\n          onClick={() => this.props.deleteAction(object.alpha2Code)}\r\n        >\r\n          <i className=\"fas fa-times delete-icon\"></i>\r\n        </button>\r\n      </div>,\r\n    ];\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.mobile) {\r\n      return (\r\n        <div id=\"graph-grid\">\r\n          {this.makeGraphHeader()}\r\n          {this.props.selectedCountries.map((item, index, array) =>\r\n            this.makeCountryRow(item, index, array)\r\n          )}\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id=\"graph-grid-mobile\">\r\n          <MobileGraphModeHeader\r\n            gridSetup={this.props.gridSetup}\r\n            sortStatus={this.props.sortStatus}\r\n            sortAction={this.props.sortAction}\r\n            toggle={this.props.toggle}\r\n          />\r\n          {this.props.selectedCountries.map((country) => (\r\n            <MobileGraphModeCountry\r\n              key={'mobile-graph-country-' + country.name}\r\n              country={country}\r\n              gridSetup={this.props.gridSetup}\r\n              selectedCountries={this.props.selectedCountries}\r\n              deleteAction={this.props.deleteAction}\r\n            />\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GraphMaker;\r\n","import React from 'react';\r\nimport './css/utilities.css';\r\nimport './css/style.css';\r\nimport { countries } from './Data';\r\nimport startingCountries from './StartingData';\r\n\r\nimport Footer from './components/Footer';\r\nimport GridMaker from './components/GridMaker';\r\nimport SiteTitle from './components/SiteTitle';\r\nimport SearchField from './components/SearchField';\r\nimport CheckboxMaker from './components/CheckboxMaker';\r\nimport ViewSwitch from './components/ViewSwitch';\r\nimport GraphMaker from './components/GraphMaker';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      connectionFail: false,\r\n      placeholderMessage: (fail) =>\r\n        fail\r\n          ? 'API could not be reached - please try again later!'\r\n          : 'Type to add country',\r\n      mobile: false,\r\n      showMobileSortOptions: false,\r\n      input: '',\r\n      suggestions: [],\r\n      cached: startingCountries,\r\n      selectedCountries: startingCountries,\r\n      headerHeight: 10,\r\n      sortStatus: 'name-false',\r\n      listView: true,\r\n      gridSetup: [\r\n        {\r\n          type: 'text',\r\n          canToggle: false,\r\n          enabled: true,\r\n          value: 'name',\r\n          header: 'Name',\r\n          width: '1fr',\r\n        },\r\n        {\r\n          type: 'image',\r\n          enabled: true,\r\n          value: 'flag',\r\n          header: 'Flag',\r\n          width: '1fr',\r\n        },\r\n        {\r\n          type: 'text',\r\n          enabled: true,\r\n          value: 'capital',\r\n          header: 'Capital',\r\n          width: '1fr',\r\n        },\r\n        {\r\n          type: 'number',\r\n          enabled: true,\r\n          value: 'population',\r\n          header: 'Population',\r\n          width: '1fr',\r\n          graph: 'relative',\r\n          color: '#9beeff',\r\n        },\r\n        {\r\n          type: 'number',\r\n          enabled: true,\r\n          value: 'area',\r\n          header: 'Area',\r\n          width: '1fr',\r\n          graph: 'relative',\r\n          color: '#ffd98d',\r\n        },\r\n        {\r\n          type: 'text',\r\n          enabled: true,\r\n          value: 'demonym',\r\n          header: 'Demonym',\r\n          width: '1fr',\r\n        },\r\n        {\r\n          type: 'number',\r\n          enabled: true,\r\n          value: 'gini',\r\n          header: 'Gini',\r\n          width: '1fr',\r\n          graph: 'absolute',\r\n          color: '#9cf89b',\r\n          tooltip:\r\n            'A measure of inequality of income or wealth, where 100% represents complete inequality and 0% complete equality.',\r\n        },\r\n        {\r\n          type: 'delete',\r\n          canToggle: false,\r\n          enabled: true,\r\n          value: 'delete',\r\n          header: 'Delete',\r\n          width: 'auto',\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.fetchBlock = false;\r\n    this.blurBlock = false;\r\n    this.headerObj = null;\r\n    this.cKeys = Object.keys(countries);\r\n    this.mobileBreakPoint = 600;\r\n\r\n    this.fetchCountry = this.fetchCountry.bind(this);\r\n    this.getSuggestions = this.getSuggestions.bind(this);\r\n    this.deleteCountry = this.deleteCountry.bind(this);\r\n    this.sortCountries = this.sortCountries.bind(this);\r\n    this.resizeAction = this.resizeAction.bind(this);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.toggleViewMode = this.toggleViewMode.bind(this);\r\n    this.toggleShowMobileSortOptions = this.toggleShowMobileSortOptions.bind(\r\n      this\r\n    );\r\n    this.selectMobileSortOption = this.selectMobileSortOption.bind(this);\r\n  }\r\n\r\n  selectMobileSortOption(value) {\r\n    this.setState(\r\n      (state) => ({\r\n        showMobileSortOptions: false,\r\n        sortStatus: value + '-' + state.sortStatus.split('-')[1],\r\n      }),\r\n      this.sortCountries()\r\n    );\r\n  }\r\n\r\n  toggleViewMode() {\r\n    this.setState((state) => ({\r\n      listView: !state.listView,\r\n    }));\r\n  }\r\n\r\n  toggleShowMobileSortOptions() {\r\n    this.setState((state) => ({\r\n      showMobileSortOptions: !state.showMobileSortOptions,\r\n    }));\r\n  }\r\n\r\n  componentDidMount() {\r\n    const rem = parseInt(\r\n      getComputedStyle(document.documentElement).fontSize.slice(0, 2)\r\n    );\r\n    this.headerObj = document.getElementById('site-header');\r\n    this.setState(\r\n      {\r\n        headerHeight: this.headerObj.offsetHeight / rem,\r\n        mobile:\r\n          window.screen.width < this.mobileBreakPoint ||\r\n          window.innerWidth < this.mobileBreakPoint\r\n            ? true\r\n            : false,\r\n      },\r\n      () => window.addEventListener('resize', this.resizeAction)\r\n    );\r\n\r\n    this.sortCountries();\r\n  }\r\n\r\n  toggle(value) {\r\n    const copiedGridSetup = this.state.gridSetup.map((item) => {\r\n      if (item.value === value) {\r\n        let copy = { ...item };\r\n        copy.enabled = !copy.enabled;\r\n        return copy;\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n    this.setState({\r\n      gridSetup: copiedGridSetup,\r\n    });\r\n  }\r\n\r\n  resizeAction() {\r\n    const rem = parseInt(\r\n      getComputedStyle(document.documentElement).fontSize.slice(0, 2)\r\n    );\r\n    this.setState({\r\n      headerHeight: this.headerObj.offsetHeight / rem,\r\n      mobile: window.innerWidth < this.mobileBreakPoint ? true : false,\r\n    });\r\n  }\r\n\r\n  sortCountries(property, ascending) {\r\n    if (arguments.length === 0) {\r\n      property = this.state.sortStatus.split('-')[0];\r\n      ascending = this.state.sortStatus.split('-')[1] === 'true' ? true : false;\r\n    }\r\n\r\n    console.log('attempting to sort');\r\n    const sortedCopy = JSON.parse(JSON.stringify(this.state.selectedCountries));\r\n\r\n    if (ascending) {\r\n      sortedCopy.sort((a, b) => (a[property] < b[property] ? 1 : -1));\r\n    } else {\r\n      sortedCopy.sort((a, b) => (a[property] > b[property] ? 1 : -1));\r\n    }\r\n    this.setState({\r\n      selectedCountries: sortedCopy,\r\n      sortStatus: property + '-' + ascending,\r\n    });\r\n  }\r\n\r\n  deleteCountry(code) {\r\n    // check if country should be cached\r\n    if (!this.state.cached.some((country) => country.alpha2Code === code)) {\r\n      this.setState((state) => ({\r\n        cached: [\r\n          ...state.cached,\r\n          ...state.selectedCountries.filter(\r\n            (country) => country.alpha2Code === code\r\n          ),\r\n        ],\r\n        selectedCountries: state.selectedCountries.filter(\r\n          (country) => country.alpha2Code !== code\r\n        ),\r\n      }));\r\n    }\r\n    // if already cached, just delete\r\n    else {\r\n      this.setState((state, props) => ({\r\n        selectedCountries: state.selectedCountries.filter(\r\n          (country) => country.alpha2Code !== code\r\n        ),\r\n      }));\r\n    }\r\n  }\r\n\r\n  fetchCountry(string) {\r\n    if (this.fetchBlock) {\r\n      return;\r\n    }\r\n\r\n    const code = countries[string];\r\n    // check if country is already selected\r\n    if (\r\n      this.state.selectedCountries.some(\r\n        (country) => country.alpha2Code === code\r\n      )\r\n    ) {\r\n      console.log('Country already selected');\r\n      return;\r\n    }\r\n\r\n    this.fetchBlock = true;\r\n\r\n    // check if country can be retrieved from cache of already viewed countries\r\n    if (this.state.cached.some((country) => country.alpha2Code === code)) {\r\n      this.setState(\r\n        (state, props) => ({\r\n          selectedCountries: [\r\n            ...state.selectedCountries,\r\n            ...state.cached.filter((country) => country.alpha2Code === code),\r\n          ],\r\n          suggestions: [],\r\n          input: '',\r\n        }),\r\n        () => {\r\n          console.log('Country collected from cache, no API call needed');\r\n          this.sortCountries();\r\n          this.fetchBlock = false;\r\n        }\r\n      );\r\n    }\r\n    // fetch previously unviewed country from API\r\n    else {\r\n      fetch('https://restcountries.eu/rest/v2/alpha/' + code)\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          this.setState(\r\n            (state, props) => ({\r\n              connectionFail: false,\r\n              selectedCountries: [\r\n                ...state.selectedCountries,\r\n                {\r\n                  ...data,\r\n                },\r\n              ],\r\n              suggestions: [],\r\n              input: '',\r\n            }),\r\n            () => {\r\n              console.log('An API call was made');\r\n              this.sortCountries();\r\n              this.fetchBlock = false;\r\n            }\r\n          );\r\n        })\r\n        .catch((error) => {\r\n          this.setState(\r\n            {\r\n              input: '',\r\n              connectionFail: true,\r\n              suggestions: [],\r\n            },\r\n            () => {\r\n              this.fetchBlock = false;\r\n              console.log('Could not get data');\r\n            }\r\n          );\r\n        });\r\n    }\r\n  }\r\n\r\n  getSuggestions(event) {\r\n    if (/[A-Za-z]/g.test(event.target.value) === false) {\r\n      this.blurBlock = false;\r\n      this.setState({\r\n        input: '',\r\n        suggestions: [],\r\n      });\r\n      return;\r\n    }\r\n    const cleanedInput = event.target.value.replace(/[^A-Za-z|\\s]/g, '');\r\n    let regex = RegExp('^' + cleanedInput, 'i');\r\n    const matchedCountries = this.cKeys.filter((item) => regex.test(item));\r\n\r\n    if (matchedCountries.length >= 4) {\r\n      this.setState((state) => ({\r\n        input: cleanedInput,\r\n        suggestions: matchedCountries.filter(\r\n          (item) =>\r\n            !state.selectedCountries.some(\r\n              (element) => element.alpha2Code === countries[item]\r\n            )\r\n        ),\r\n      }));\r\n    } else {\r\n      regex = RegExp(cleanedInput, 'i');\r\n      const tier2searches = this.cKeys\r\n        .filter((item) => regex.test(item))\r\n        .filter((item) => !matchedCountries.includes(item));\r\n      this.setState((state) => ({\r\n        input: cleanedInput,\r\n        suggestions: matchedCountries\r\n          .concat(tier2searches)\r\n          .filter(\r\n            (item) =>\r\n              !state.selectedCountries.some(\r\n                (element) => element.alpha2Code === countries[item]\r\n              )\r\n          ),\r\n      }));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"site-container\">\r\n        <header id=\"site-header\" className=\"p-small screen-small-p\">\r\n          <div className=\"flex-column screen-small-flex-row screen-small-justify-between screen-small-align-center screen-small-m-bottom\">\r\n            <SiteTitle\r\n              classes=\"flex-row align-center justify-between m-bottom-small screen-small-no-m-bottom screen-small-m-left\"\r\n              mobile={this.state.mobile}\r\n            />\r\n            <div className=\"flex-row-reverse screen-small-flex-row screen-small-align-center\">\r\n              <ViewSwitch\r\n                classes=\"screen-small-m-right\"\r\n                listView={this.state.listView}\r\n                toggleView={this.toggleViewMode}\r\n              />\r\n              <SearchField\r\n                connectionFail={this.state.connectionFail}\r\n                placeholderMessage={this.state.placeholderMessage}\r\n                classes=\"grow m-right-small screen-small-m-right\"\r\n                suggestions={this.state.suggestions}\r\n                onChange={this.getSuggestions}\r\n                onBlur={() => {\r\n                  if (!this.blurBlock) {\r\n                    this.setState({ suggestions: [] });\r\n                  }\r\n                }}\r\n                input={this.state.input}\r\n                onMouseEnter={() => {\r\n                  this.blurBlock = true;\r\n                }}\r\n                onMouseLeave={() => {\r\n                  this.blurBlock = false;\r\n                }}\r\n                add={this.fetchCountry}\r\n              />\r\n            </div>\r\n          </div>\r\n          <CheckboxMaker\r\n            classes=\"hide screen-small-flex-row screen-small-align-center screen-small-m-left\"\r\n            gridSetup={this.state.gridSetup}\r\n            toggle={this.toggle}\r\n            listView={this.state.listView}\r\n          />\r\n        </header>\r\n        <div\r\n          id=\"content-container\"\r\n          className=\"flex-column\"\r\n          style={{ paddingTop: this.state.headerHeight + 'rem' }}\r\n        >\r\n          <div\r\n            id=\"grid-wrapper\"\r\n            className=\"p-left-small p-top-small p-right-small screen-small-p-left screen-small-p-top screen-small-p-right flex-column align-stretch grow\"\r\n          >\r\n            {this.state.listView ? (\r\n              <GridMaker\r\n                sortAction={this.sortCountries}\r\n                deleteAction={this.deleteCountry}\r\n                sortStatus={this.state.sortStatus}\r\n                gridSetup={this.state.gridSetup}\r\n                selectedCountries={this.state.selectedCountries}\r\n                mobile={this.state.mobile}\r\n                showMobileSortOptions={this.state.showMobileSortOptions}\r\n                toggleShowMobileSortOptions={this.toggleShowMobileSortOptions}\r\n                selectMobileSortOption={this.selectMobileSortOption}\r\n              />\r\n            ) : (\r\n              <GraphMaker\r\n                selectedCountries={this.state.selectedCountries}\r\n                sortAction={this.sortCountries}\r\n                sortStatus={this.state.sortStatus}\r\n                deleteAction={this.deleteCountry}\r\n                gridSetup={this.state.gridSetup}\r\n                mobile={this.state.mobile}\r\n                toggle={this.toggle}\r\n              />\r\n            )}\r\n            <div className=\"grow\"></div>\r\n            <Footer classes=\"flex-column screen-medium-flex-row justify-center align-center m-bottom-small m-top-small\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}